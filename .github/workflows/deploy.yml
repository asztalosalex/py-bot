name: Deploy to VPS

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set up SSH and Debug
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
        run: |
          # Setup SSH directory and keys
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          
          # Debug information
          echo "=== SSH Configuration ==="
          ls -la ~/.ssh/
          echo "=== SSH Key Fingerprint ==="
          ssh-keygen -lf ~/.ssh/id_ed25519 || echo "Invalid key format"
          echo "=== Testing SSH Connection ==="
          ssh -v -o BatchMode=yes -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 $VPS_USERNAME@$VPS_HOST 'echo "SSH Connection Test"'

      - name: Deploy to VPS
        if: success()
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
          DEPLOY_PATH: /home/alex/python/discord-bot-python
        run: |
          echo "=== Starting Deployment ==="
          # Try to stop service with increased verbosity
          ssh -v $VPS_USERNAME@$VPS_HOST 'sudo -n systemctl stop pybot || echo "Failed to stop service"'
          
          echo "=== Deploying Code ==="
          # Deploy with verbose output
          rsync -avvz --delete \
            --exclude '.git*' \
            --exclude '__pycache__' \
            --exclude '*.pyc' \
            --exclude '.env' \
            --exclude '.venv' \
            ./ $VPS_USERNAME@$VPS_HOST:$DEPLOY_PATH/
          
          echo "=== Setting up Virtual Environment ==="
          ssh $VPS_USERNAME@$VPS_HOST "cd $DEPLOY_PATH && [ ! -d .venv ] && python3 -m venv .venv || true"
          
          echo "=== Installing Dependencies ==="
          ssh $VPS_USERNAME@$VPS_HOST "cd $DEPLOY_PATH && .venv/bin/pip install -r requirements.txt"
          
          echo "=== Checking Environment File ==="
          ssh $VPS_USERNAME@$VPS_HOST "sudo -n [ ! -f /etc/pybot.env ] && echo 'Creating new environment file' && sudo touch /etc/pybot.env || true"
          
          echo "=== Restarting Service ==="
          ssh $VPS_USERNAME@$VPS_HOST 'sudo -n systemctl restart pybot || echo "Failed to restart service"'

      - name: Verify Deployment
        if: success()
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
        run: |
          echo "=== Checking Service Status ==="
          ssh $VPS_USERNAME@$VPS_HOST '
            echo "Service Status:"
            sudo -n systemctl status pybot --no-pager || echo "Could not get service status"
            echo -e "\nLast 10 log lines:"
            sudo -n journalctl -u pybot -n 10 --no-pager || echo "Could not get logs"
          ' 